swagger: "2.0"
tags:
- name: "Elevation"
  description: |
    Returns elevation for point or line geometries by building 3D geometries from freely available data sources.
info:
  description: |
    Returns elevation for point or line geometries by building 3D geometries from freely available data sources.
  version: "0.1"
  title: "openelevationservice"
  contact:
    email: "support@openrouteservice.org"
  license:
    name: "MIT"
    url: "https://github.com/GIScience/openelevationservice/blob/master/LICENSE"
consumes:
- "application/json"
schemes:
- "https"
produces:
- "application/json"
host: "api.openrouteservice.org"
security:
- UserSecurity: [api_key]
securityDefinitions:
  UserSecurity:
    name: "api_key"
    description: |
      Add your API Key as the value of the api_key parameter to your request.
    type: "apiKey"
    in: "query"
responses:
  success:
    description: "Standard response for successfully processed requests."
    schema:
      $ref: "#/definitions/GeoJSONResponse"
  authmissing:
    description: "Authorization field missing."
  notauthorized:
    description: "Key not authorised."
  serverissue:
    description: |
      An unexpected error was encountered and more detailed internal
      errorcode is provided.
      | Internal Code | Description                                        |
      |:-------------:|----------------------------------------------------|
      | 4001 |  ValueError in parameters |
      | 4002 |  Wrong HTTP headers |
      | 4003 |  Problems with the provided geometry |
      | 4004 |  Exceeded the number of allowed vertices |
paths:
  "/elevation/line":
    post:
      tags:
      - "Elevation"
      summary:  "Elevation Line Service"
      description: |
        This endpoint can take planar 2D line objects and enrich them with elevation from a variety of datasets.

        The input and output formats are:
          * GeoJSON
          * Polyline
          * <a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">Google's Encoded polyline</a>

        Example:
        ```
          # POST LineString as polyline
          curl -XPOST https://api.openrouteservice.org/elevation/line
            -H 'Content-Type: application/json' \
            -H 'Authorization: INSERT_YOUR_KEY
            -d '{
              "format_in": "polyline",
              "format_out": "encodedpolyline",
              "geometry": [[13.349762, 38.11295],
                           [12.638397, 37.645772]]
                }'
        ```
      parameters:
      - name: "Authorization"
        in: "header"
        description: |
          Insert your API Key here.
        type: "string"
        required: true
        default: "your-api-key"
      - in: body
        name: body
        required: true
        description: Query the elevation of a line in various formats.
        example: '{"format_in":"polyline","format_out":"encodedpolyline","geometry":[[13.349762,38.11295],[12.638397,37.645772]]}'
        type: object
#        requiredParams:
#        - format_in
#        - geometry
        props:
          $ref: '#/definitions/LineGeometryPost'
      responses:
        200:
          $ref: "#/responses/success"
        401:
          $ref: "#/responses/authmissing"
        403:
          $ref: "#/responses/notauthorized"
        500:
          $ref: "#/responses/serverissue"
  "/elevation/point":
    post:
      tags:
      - "Elevation"
      summary:  "Elevation Point Service"
      description: |
        This endpoint can take a 2D point and enrich it with elevation from a variety of datasets.

        The input and output formats are:
          * GeoJSON
          * Point

        Example Body:
        ```
          {
            "format_in": "geojson",
            "format_out": "geojson",
            "geometry": {
              "coordinates": [13.349762, 38.11295],
              "type": "Point"
            }
          }
        ```
      parameters:
      - name: "Authorization"
        in: "header"
        description: |
          Insert your API Key here.
        type: "string"
        required: true
        default: "your-api-key"
      - in: body
        name: body
        description: Query the elevation of a point in various formats.
        example: '{"format_in":"geojson","format_out":"geojson","geometry":{"coordinates":[13.349762,38.11295],"type":"Point"}}'
        type: object
        required: true
#        requiredParams:
#        - format_in
#        - geometry
        properties:
          $ref: '#/definitions/PointGeometryPostProps'
      responses:
        200:
          $ref: "#/responses/success"
        401:
          $ref: "#/responses/authmissing"
        403:
          $ref: "#/responses/notauthorized"
        500:
          $ref: "#/responses/serverissue"
    get:
      tags:
      - "Elevation"
      summary: "Elevation Point Service"
      description: |
        This endpoint can take a 2D point and enrich it with elevation from a variety of datasets.

        The output formats are:
          * GeoJSON
          * Point

        Example:
        ```
          # GET point
          curl -XGET https://localhost:5000/elevation/point?geometry=13.349762,38.11295
        ```
      parameters:
      - name: "api_key"
        in: "query"
        description: |
          Insert your API Key here.
        type: "string"
        required: true
        example: "your-api-key"
      - in: query
        name: geometry
        description: The point to be queried, in comma-separated lon,lat values, e.g. [13.349762, 38.11295]
        required: true
        type: array
        items:
          type: double
        example: "13.349762,38.11295"
      - in: query
        name: format_out
        type: string
        description: The output format to be returned.
        enum: [geojson, point]
        apiDefault: geojson
      - in: query
        name: dataset
        description: The elevation dataset to be used.
        type: string
        enum: [srtm]
        apiDefault: srtm
      responses:
        200:
          $ref: "#/responses/success"
        401:
          $ref: "#/responses/authmissing"
        403:
          $ref: "#/responses/notauthorized"
        500:
          $ref: "#/responses/serverissue"
definitions:
  LineGeometryPost:
    format_in:
      type: string
      description: The input format the API has to expect.
      enum: [geojson, polyline, encodedpolyline]
      example: encodedpolyline
      required: true
    format_out:
      type: string
      description: The output format to be returned.
      enum: [geojson, polyline, encodedpolyline]
      apiDefault: encodedpolyline
    dataset:
      type: string
      description: The elevation dataset to be used.
      enum: [srtm]
      apiDefault: srtm
    geometry:
      type: object
      required: true
      example: u`rgFswjpAKD
      description: |
        * geojson: A geometry object of a LineString GeoJSON, e.g.
                 {"type": "LineString",
                  "coordinates": [[13.331302, 38.108433],[13.331273, 38.10849]]
                 }
        * polyline: A list of coordinate lists, e.g.
                 [[13.331302, 38.108433], [13.331273, 38.10849]]

        * encodedpolyline: A <a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">Google encoded polyline</a>, e.g.
                 u`rgFswjpAKD

  PointGeometryPostProps:
    format_in:
      type: string
      description: The input format the API has to expect.
      enum: [geojson, point]
      example: point
      required: true
    format_out:
      type: string
      description: The output format to be returned.
      enum: [geojson, point]
      apiDefault: geojson
    dataset:
      type: string
      description: The elevation dataset to be used.
      enum: [srtm]
      apiDefault: srtm
    geometry:
      type: object
      example: [13.331273, 38.10849]
      required: true
      description: |
        * geojson: A geometry object of a Point GeoJSON, e.g.
                 {"type": "Point",
                  "coordinates": [13.331273, 38.10849]
                 }
        * point: A coordinate list, e.g.
                 [13.331273, 38.10849]

  GeoJSONResponse:
    type: object
    properties:
      attribution:
        type: string
      version:
        type: string
      timestamp:
        type: integer
      geometry:
        type: object
        properties:
          type:
            type: string
          coordinates:
            type: array
            items:
              type: array
              maxItems: 2
              minItems: 2
              items:
                type: float
